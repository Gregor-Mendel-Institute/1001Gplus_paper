# Author: Sebastian Vorbrugg
# Email: sebastian.vorbrugg@tuebingen.mpg.de
# Date: 16.01.24
# Description: Deconstruct the graph
# GitHub: https://github.com/Gregor-Mendel-Institute/1001Gplus_paper

# Tools needed: minimap2, fpa and seqkit
# vg: v1.46.0
# Snakemake 5.5.3

# Input fold contains graphs (chrom-sep)


configfile: "config.yaml"

rule target:
    input:
        expand(expand(config["output"] + "deconstruct/vcf/{chr}.{{path}}_{chr1}.vcf",zip,chr=config["chr"],chr1=config["chr1"]), path=config["path"]),
        expand(expand(config["output"] + "deconstruct/bed/{chr}.{{path}}_{chr1}.bed",zip,chr=config["chr"],chr1=config["chr1"]), path=config["path"]),
        expand(config["output"] + "deconstruct/stats/{chr}_{chr1}.stats", zip, chr=config["chr"], chr1 = config["chr1"]),
        expand(expand(config["output"] + "deconstruct/bed_sv/{chr}.{{path}}_{chr1}.sv.bed",zip,chr=config["chr"],chr1=config["chr1"]), path=config["path"]),


# Deconstruct each graph in a vcf using VG
# Modify the PGGB ending if needed
# There is a modified rule for 22001, since it has a modified name
# This rule takes the longest
rule deconstruct:
    input:
       gfa = config["data"] + "{chr}.90/{chr}.fasta.gz.4158095.c2fac19.5c75112.smooth.final.gfa",
    output:
        config["output"] + "deconstruct/vcf/{chr}.{path}_{chr1}.vcf"
    run:
        if {wildcards.path} == {"22001"}:
            shell("vg deconstruct -t 5 -e -a -p {wildcards.path}_{wildcards.chr1}_mod2 {input.gfa} > {output}")
        else:
            shell("vg deconstruct -t 5 -e -a -p {wildcards.path}_{wildcards.chr1} {input.gfa} > {output}")

# Convert the VCF file to a BED format
rule vcf2bed:
    input:
       config["output"] + "deconstruct/vcf/{chr}.{path}_{chr1}.vcf"
    output:
        config["output"] + "deconstruct/bed/{chr}.{path}_{chr1}.bed"
    shell:
        "./vcf2bed.py -i {input} -o {output}"


# Merge the BED files for each accession to one big file format
rule vcf2stats:
    input:
        expand(config["output"] + "deconstruct/vcf/{{chr}}.{path}_{{chr1}}.vcf", path=config["path"])
    output:
        config["output"] + "deconstruct/stats/{chr}_{chr1}.stats"
    shell:
        "./vcf2stats.py -d $(echo {output} | rev | cut -d / -f 3- | rev)/vcf -c {wildcards.chr} -o {output}"


# Remove the small variation from the file (this is a filter)
rule remove_small:
    input:
        bed = config["output"] + "deconstruct/bed/{chr}.{path}_{chr1}.bed",
        stats = config["output"] + "deconstruct/stats/{chr}_{chr1}.stats"
    output:
        bed = config["output"] + "deconstruct/bed_sv/{chr}.{path}_{chr1}.sv.bed"
    shell:
        "./sv_only.py -b {input.bed} -s {input.stats} -o {output}"
